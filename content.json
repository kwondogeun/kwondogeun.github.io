{"pages":[],"posts":[{"title":"DecisionTree","text":"Decision Tree개념 의사결정트리는 일련의 분류 규칙을 통해 데이터를 분류,회귀하는 지도 학습 모델 중 하나 결과 모델이 Tree 구조를 가지고 있기때문에 Decision Tree 라는 이름을 가짐 예측 변수를 기반으로 결과를 분류하거나 예측 대표적인 의사결정트리 예시 두 가지로 나뉘는 부분들을 분기라 부름 분기들중 가장 위에 있는 분기를 루트 노드 (yes,no) 결정 노드 맨 밑에 있는 노드를 잎 노드 의사결정트리 모형 만들기 크게 성장(growing),가지치기(pruning)단계를 통하여 만들어진다. 성장단계에서는 먼저 최적화할 목적함수를 정한다. 가지치기단계에서는 과적합(overfitting)을 방지, 해석이 안되는 규칙등 불필요한 가지를 제거한다. 출력 변수가 연속형이면 회귀나무(regression tree) 출력 변수가 범주형이면 번류나무(classification) 의사결정트리 구현하기 먼저 주어진 데이터의 조건을 확인 조건을 만족한 노드의 분리를 멈춘다, 만약 해당 노드가 왼쪽(오른쪽)노드라면 오른쪽(왼쪽)데이터에 대해서 동일한 과정을 반복 조건을 만족하지 않는경우 모든 설명 변수에 대해 분리기준 후보생성후 불순도 측정을 이용해 최적 분리기준을 찾고 이를 통해 데이터를 분리한다. 이경우 데이터는 왼쪽과 오른쪽 데이터로 나누어지고 이 2개의 데이터에 대해서 동일한 과정을 반복한다. [참조] Decision Tree 정리글 URL:https://zephyrus1111.tistory.com/124 소스 참고: https://scikit-learn.org/stable/modules/tree.html#regression 영상 참고: https://www.youtube.com/results?search_query=decision+tree+","link":"/2021/11/04/DecisionTree/"},{"title":"image","text":"이미지 파일 업로드 방법 source파일에 img디렉토리 생성후 img파일안에 이미지넣기1![imageupload](/img/imageupload.PNG) 대소문자 구분필수 파일명 일치하는지 확인","link":"/2021/11/02/image/"},{"title":"numpy","text":"라이브러리 불러오기12import numpy as npprint(np.__version__) 1.19.5 12temp = np.array([1, 2, 3])print(type(temp)) &lt;class 'numpy.ndarray'&gt; Numpy 배열 생성 및 둘러보기12data1 = [1,2,3]data1 [1, 2, 3] 12data2= [1,1,2,2,3,4]data2 [1, 1, 2, 2, 3, 4] 123my_array1 = np.array(data1)print(my_array1) print(my_array1.shape) [1 2 3] (3,) --&gt;3개들어있기때문 123my_array2 = np.array(data2)print(my_array2) print(my_array2.shape) [1 1 2 2 3 4] (6,) 1234my_array3 = np.array([3,6,9,12])print(my_array3)print(my_array3.shape)print(my_array3.dtype) [ 3 6 9 12] (4,) int64 12my_array4 = np.array([[2,4,6],[8,10,12],[14,16,18],[20,22,24]])my_array4 array([[ 2, 4, 6], [ 8, 10, 12], [14, 16, 18], [20, 22, 24]]) 1my_array4.shape (4, 3)--&gt; 4개의배열안에 3개가 들어있음 12my_array5 = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])my_array5.shape (2, 2, 2) 기본함수arange12arrange_array = np.arange(5)arrange_array array([0, 1, 2, 3, 4]) 12arrange_array2 = np.arange(1, 9, 3)arrange_array2 array([1, 4, 7]) [start,stop,step] step의 크기만큼 일정하게 떨어져있는 숫자를 array형태로 반환 기본값은 start=0 step=1 zeroes, ones 1234zeros_array = np.zeros((3,2))print(zeros_array)print(&quot;Data Type is:&quot;, zeros_array.dtype)print(&quot;Data Shape is:&quot;, zeros_array.shape) [[0. 0.] [0. 0.] [0. 0.]] Data Type is: float64 Data Shape is: (3, 2) 1234ones_array = np.ones((3,4), dtype='int32')print(ones_array)print(&quot;Data Type is:&quot;, ones_array.dtype)print(&quot;Data Shape is:&quot;, ones_array.shape) [[1 1 1 1] [1 1 1 1] [1 1 1 1]] Data Type is: int32 Data Shape is: (3, 4) zeros:0으로 초기화된 shape차원의 ndarray 배열 객체 반환 ones :1로 초기화된 shape차원의 ndarray 배열 객체 반환reshape 123after_reshape = ones_array.reshape(6,2)print(after_reshape)print(&quot;Data Shape is:&quot;, after_reshape.shape) [[1 1] [1 1] [1 1] [1 1] [1 1] [1 1]] Data Shape is: (6, 2) 1after_reshape = ones_array.reshape(5,3) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) &lt;ipython-input-25-94cac763be50&gt; in &lt;module&gt;() ----&gt; 1 after_reshape = ones_array.reshape(5,3) ValueError: cannot reshape array of size 12 into shape (5,3) 123after_reshape = ones_array.reshape(2,3,2)print(after_reshape)print(&quot;Data Shape is:&quot;, after_reshape.shape) [[[1 1] [1 1] [1 1]] [[1 1] [1 1] [1 1]]] Data Shape is: (2, 3, 2) 123after_reshape2= ones_array.reshape(-1,6)print(&quot;reshape(-1,6)? \\n&quot;)print(after_reshape2) reshape(-1,6)? [[1 1 1 1 1 1] [1 1 1 1 1 1]] 1234after_reshape3= ones_array.reshape(3,-1)print(&quot;reshape(3, -1)? \\n&quot;)print(after_reshape3)print(&quot;Data Shape is:&quot;, after_reshape3.shape) reshape(3, -1)? [[1 1 1 1] [1 1 1 1] [1 1 1 1]] Data Shape is: (3, 4) 현재의 배열 차원(1차원,2차원,3차원)을 변경하여 행렬 반환 Numpy 정렬 1차원배열정렬 (x)(-x)sort()12345height_arr = np.array([174, 165, 180, 182, 168])sorted_height_arr = np.sort(height_arr)print('Height Matrix: ', height_arr)print('np.sort() Matrix: ', sorted_height_arr) Height Matrix: [174 165 180 182 168] np.sort() Matrix: [165 168 174 180 182] 12desc_sorted_height_arr = np.sort(height_arr)[::-1]print('np.sort()[::-1] : ', desc_sorted_height_arr) np.sort()[::-1] : [182 180 174 168 165] argsort()123456fives = np.array([10, 5, 15, 20])fives_order = fives.argsort()print(&quot;The original data&quot;, fives)print(&quot;The argsort(): &quot;, fives_order)print(&quot;The asending:&quot;, fives[fives_order]) The original data [10 5 15 20] The argsort(): [1 0 2 3] The asending: [ 5 10 15 20]","link":"/2021/11/02/numpy/"},{"title":"pandas","text":"라이브러리 불러오기12import pandas as pdprint(pd.__version__) 1.1.5 테스트12df = pd.DataFrame({'col1': [1, 2], 'col2': [3, 4]})print(type(df)) &lt;class 'pandas.core.frame.DataFrame'&gt; 구글 드라이브 연동12from google.colab import drivedrive.mount('/content/drive') Mounted at /content/drive * 주의사항 : 경로 중복되지않게!! *","link":"/2021/11/02/pandas/"},{"title":"plotly","text":"코드분석 노트북1234567891011import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport plotly.express as pximport plotly.graph_objects as gofrom warnings import filterwarningsfilterwarnings('ignore')colors = ['#B1EDED','#B1B2ED','#1DE7ED','#1DA5ED','#1D50ED','#16548E']df = pd.read_csv('../input/kwdoku145/kaggle_survey_2021_responses.csv')df.head() 123456789101112131415161718##fig &gt; go.Figure &gt; data: 그래프가 그려지는 데이터 담기fig = go.Figure(data=[go.Pie(labels=df['Q4'][1:].value_counts().index, values=df['Q4'][1:].value_counts().values, textinfo='label+percent')]) ## go.Pie 원형그래프 ## Q4의 데이터 값을 가져옴 index 내용 / valuses 값## textinfo='label+percent 표안에 퍼센트와 내용기입fig.update_traces(marker=dict(colors=colors[2:]))## 형성된 fig에 추가적인 시각적요소 삽입 /색깔입히기fig.update_layout(title_text='Formal Education attained or plan to attain in next 2 year', showlegend=False)## fig &gt; go.Figure &gt; layout: 그래프의 부가정보 기입, 그래프 크기 등 조절 ## 형성된 fig에 레이아웃 계속 업데이트 가능## title_text=''그래프 제목 / showlegend='False' 범례숨기기fig.show() Reference PieURL:https://plotly.com/python/reference/pie/ URL:https://github.com/plotly/plotly.py/blob/master/doc/python/pie-charts.md","link":"/2021/11/08/plotly/"},{"title":"temp1028","text":"2021년 10월 28일 시작. 개요-블로그 만들기 프로그램 설치-node.js 설치 URL:https://nodejs.org/ko/ git 설치 URL:https://git-scm.com/ -깃허브 회원가입 URL:https://github.com/ -pycharm 설치 URL:https://www.jetbrains.com/ko-kr/pycharm/ 깃허브 파일생성 로그인 후 your repositories 클릭 New Repository name(파일명과 동일하게) Create repository Code 클릭후 https 복사 바탕화면 우클릭 Git bash 실행 ~$git clone 붙여넣기 파일생성완료 Repo 만들기 블로그 운영을 위한 Repo 2개의 파일(버전관리,배포용)이 필요하다. hexo 설치 1~$ npm install -g hexo-cli 파일 명은 버전: ex)myblog 배포용: 본인이름.github.io 두 개의 파일 깃허브생성 123456- ~$ hexo init myblog- ~$ cd myblog- ~$ npm install- ~$ npm install hexo-server --save- ~$ npm install hexo-deployer-git --save config.yml 파일 설정 1234title: 제목을 지어주세요author: YourNameurl: https://본인이름.github.io 12345#Deployment -- _config.yml 내용 수정 - deploy: - type: git - repo: https://github.com/kwondogeun/kwondogeun.github.io.git - branch: main 1~$ hexo generate --버전 1~$ hexo server를 통해 localhost:4000으로 화면확인 1~$ hexo deploy --배포 블로그 파일 만들기1-~$ hexo new 파일명 용어정리123~$ git add . ~$ git commit -m &quot;updated&quot; ~$ git push 테마 변경(예시)1~$ npm install -S hexo-theme-icarus --이카루스테마 _config.yml에서theme:icarus–로 수정 에러생성 (?) 1~$ npm install --save bulma-stylus@0.8.0 hexo-renderer-inferno@^0.1.3 을추가하라고 문구나옴 에러문구 메세지입력하면 적용 이미지 추가(예시) source하위 폴더에 images폴더 생성 ##배포할때 명령필수-&gt; 12$hexo generate $hexo deploy ##블로그 만들기 (참고자료)https://ppoffice.github.io/hexo-theme-icarus/uncategorized/getting-started-with-icarus/#install-npm ##블로그 세팅하기 (참고자료)https://dschloe.github.io/settings/ ##나의 깃허브 링크https://github.com/kwondogeun/kwondogeun.github.io/ ##빅데이터 공모전 링크https://bigdata.seoul.go.kr/noti/selectNoti.do?r_id=P440&amp;bbs_seq=429&amp;sch_type=&amp;sch_text=&amp;currentPage=1 ##빅데이터 자격증 관련 링크https://dataq.or.kr/www/main.do 파이썬2021-11-01 파이썬 수업 google colab 검색해서 이용(깃허브 연동가능) 크롬 로그인해서 이용할것. ##예시 주석처리12345# 한 줄 주석 처리&quot;&quot;&quot;여러 줄 주석 예제 동일한 따옴표(큰따옴표 혹은 작은 따옴표) 세 개와 세 개 사이에는어떠한 내용, 몇 줄이 들어가더라도 모두 주석으로 처리된다.&quot;&quot;&quot;print(&quot;Hello, world!&quot;) Hello, world! Hello World1print(&quot;Hello, world!&quot;) Hello, world! 변수의 종류 int,float,bool,none 12num_int = 1print(type(num_int)) &lt;class 'int'&gt; 12num_float = 0.2print(type(num_float)) &lt;class 'float'&gt; 12bool_true = Trueprint(type(bool_true)) &lt;class 'bool'&gt; 12none_x = Noneprint(type(none_x)) &lt;class 'NoneType'&gt; 사칙연산123456789a = 3b = 2print('a + b = ', a+b)print('a - b = ', a-b)print('a * b = ', a*b)print('a / b = ', a/b)print('a // b = ', a//b)print('a % b = ', a%b)print('a ** b = ', a**b) a + b = 5 a - b = 1 a * b = 6 a / b = 1.5 a // b = 1 a % b = 1 a ** b = 9 123456789c = 3.0d = 2.0print('c + d =', c+d)print('c - d =', c-d)print('c * d =', c*d)print('c / d =', c/d)print('c // d =', c//d)print('c % d =', c%d)print('c ** d =', c**d) c + d = 5.0 c - d = 1.0 c * d = 6.0 c / d = 1.5 c // d = 1.0 c % d = 1.0 c ** d = 9.0 논리형 연산자1234print(True and True)print(True and False)print(False and True)print(False and False) True False False False 1234print(True or True)print(True or False)print(False or True)print(False or False) True True True False 비교 연산자123456print(4 &gt; 3)print(4 &lt; 3)print(4 &gt;= 3)print(4 &lt;= 3)print(4 &gt; 4)print(4 &gt;= 4) True False True False False True 논리형 &amp; 비교 연산자 응용1234# input(&quot;숫자를 입력하세요&quot;)data =input(&quot;숫자를 입력하세요&quot;)data2 =int(data)print(type(data2)) 숫자를 입력하세요3 &lt;class 'int'&gt; 12345678num1 = int(input(&quot;첫번째 숫자를 입력하세요: &quot;))num2 = int(input(&quot;두번째 숫자를 입력하세요: &quot;))num3 = int(input(&quot;세번째 숫자를 입력하세요: &quot;))num4 = int(input(&quot;네번째 숫자를 입력하세요: &quot;))var1 = num1 &gt;= num2var2 = num3 &lt; num4print(var1 and var2) 첫번째 숫자를 입력하세요: 4 두번째 숫자를 입력하세요: 5 세번째 숫자를 입력하세요: 2 네번째 숫자를 입력하세요: 3 False String12print(&quot;'Hello, world!'&quot;)print('&quot;Hello, world!&quot;') 'Hello, world!' &quot;Hello, world!&quot; String Operators123str1 = &quot;Hello &quot;str2 = &quot;World &quot;print('str1 + str2 = ', str1 + str2) str1 + str2 = Hello World 12greet = str1 + str2print('greet * 3 = ', greet * 3) greet * 3 = Hello World Hello World Hello World Indexing12greeting = &quot;Hello Kaggle&quot;print(greeting[6]) K Slicing1234greeting = &quot;안녕하세요&quot;print(greeting[:])print(greeting[4:])print(greeting[0:3:4]) 안녕하세요 요 안 123456greeting = &quot;Hello Kaggle&quot;print(greeting[:])print(greeting[6:])print(greeting[:6])print(greeting[3:8])print(greeting[0:9:2]) Hello Kaggle Kaggle Hello lo Ka HloKg 1greeting[13] --------------------------------------------------------------------------- IndexError Traceback (most recent call last) &lt;ipython-input-19-ff3909a635f6&gt; in &lt;module&gt;() ----&gt; 1 greeting[13] IndexError: string index out of range 존재하지않은 값을 넣게되면 오류 발생 리스트1234567891011a = [] # 빈 리스트a_func = list() #list()함수로도 빈 리스트를 만들 수 있다.b = [1] # 숫자도 요소가 될 수 있다.c = ['apple'] # 문자열도 요소가 될 수 있다d = [1, 2, ['apple']] # 리스트 안에 리스트를 요소로 넣을 수 있다.print(a)print(a_func)print(b)print(c)print(d) [] [] [1] ['apple'] [1, 2, ['apple']] 123456a = [1, 2, 3]# index [[0], [1], [2]]print(a[0]) # 첫번째 요소print(a[1]) # 두번째 요소print(a[2]) # 세번째 요소print(a[-1]) 1 2 3 3 123456a = [['apple','banana','cherry'], 1]print(a[0]) # 리스트 내의 리스트print(a[0][0]) # 리스트 내의 리스트의 첫번째 문자열print(a[0][0][3]) # 리스트 내의 리스트의 첫번째 문자열 'apple' 중 첫번째 인덱스print(a[0][1]) # 리스트 내의 리스트의 두번째 문자열 ['apple', 'banana', 'cherry'] apple l banana 12345678910111213a = [1,2,3,4,5,6,7,8,9,10]b = a[:4] # 인덱스 0부터 3까지c = a[1:4] # 인덱스 1부터 3까지d = a[0:7:2] # 인덱스 0부터 6까지 인덱스 2씩 건너 띄우기e = a[::-1] # 리스트 a의 역순f = a[::2] # 리스트 전체구간에서 인덱스 2씩 건너띄우기print(&quot;a[:4]&quot;, b)print(&quot;a[1:4]&quot;, cprint(&quot;a[0:7:2]&quot;, d)print(&quot;a[::-1]&quot;, e)print(&quot;a[::2]&quot;, f) a[:4] [1, 2, 3, 4] a[1:4] [2, 3, 4] a[0:7:2] [1, 3, 5, 7] a[::-1] [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] a[::2] [1, 3, 5, 7, 9] 12345a = ['alice', 'bob', 'cat']b = ['apple', 'banana', 'cherry']c = a+bprint(c) ['alice', 'bob', 'cat', 'apple', 'banana', 'cherry'] 12345a = ['a','b','c']b = a*3c = a*0print(&quot;a * 3:&quot;, b)print(&quot;a * 0:&quot;, c) a * 3: ['a', 'b', 'c', 'a', 'b', 'c', 'a', 'b', 'c'] a * 0: [] 리스트 값 수정하기1234a = [0,1,2]a[1] = &quot;b&quot;print(a) [0, 'b', 2] 리스트 값 추가하기123456a = [100, 200, 300]a.append(400)print(a)a.append([500,600])print(a) [100, 200, 300, 400] [100, 200, 300, 400, [500, 600]] 1234a = [1,2,3]a.extend([40,500])print('a.extend([40,500]) result')print(a) a.extend([40,500]) result [1, 2, 3, 40, 500] 1234a = [0,1,2]a.insert(1,100)print(a) [0, 100, 1, 2] 12345678910111213a = [0,1,2,3]a[2:2] = [100,200]print(a)# 시작과 끝의 범위보다 큰 수를 덮어쓰는 예시b = [0,1,2,3]b[1:2] = [100,200,300,400] print(b)# 시작과 끝의 범위가 작을때의 예시c = [0,1,2,3]c[1:3] = [100]print(c) [0, 1, 100, 200, 2, 3] [0, 100, 200, 300, 400, 2, 3] [0, 100, 3] 리스트 값 삭제하기123456789a =[1,2,1,2]#리스트의 첫번째 1이 삭제a.remove(1)print(a)#리스트의 두번째 1이 삭제a.remove(5)print(a) [2, 1, 2] --------------------------------------------------------------------------- ValueError Traceback (most recent call last) &lt;ipython-input-39-77b804eb04cb&gt; in &lt;module&gt;() 6 7 #리스트의 두번째 1이 삭제 ----&gt; 8 a.remove(5) 9 print(a) ValueError: list.remove(x): x not in list 12345678910a = [0,1,2,3,4,5,6,7,8,9]# 1 삭제del a[1]print(a)b = [0,1,2,3,4,5,6,7,8,9]# 범위로 삭제del b[1:3] #list는 항상 시작하는 index부터, 종료하는 n의 n-1까지의 범위를 잡아줍니다.print(b) [0, 2, 3, 4, 5, 6, 7, 8, 9] [0, 3, 4, 5, 6, 7, 8, 9] 123456#인덱스를 지정한 pop()a = [0,1,2,3,4]r = a.pop(1)print(a)print(r) [0, 2, 3, 4] 1 123456#인덱스를 지정하지 않은 pop()b = ['a','b','c','d']x = b.pop()print(b)print(x) ['a', 'b', 'c'] d 그 외 유용한 메서드12345a = [0,1,2,3]print(a)a.clear()print(a) [0, 1, 2, 3] [] 12a = [&quot;Gold&quot;, &quot;Gold&quot;, &quot;Silver&quot;, &quot;Silver&quot;]print(&quot;Silver가 처음 등장하는 인덱스 번호&quot;, a.index(&quot;Silver&quot;)) Silver가 처음 등장하는 인덱스 번호 2 12345678a = [1, 4, 5, 2, 3]b = [1, 4, 5, 2, 3]a.sort()print(&quot;sort():&quot;,a)b.sort(reverse=True)print(&quot;sort(reverse=True):&quot;, b) sort(): [1, 2, 3, 4, 5] sort(reverse=True): [5, 4, 3, 2, 1] 1234b = [4,3,2,'a']b.sort()print(b) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-38-1624da3f09a9&gt; in &lt;module&gt;() 1 b = [4,3,2,'a'] 2 ----&gt; 3 b.sort() 4 print(b) TypeError: '&lt;' not supported between instances of 'str' and 'int' 튜플1234567891011tuple1 = (0) # 끝에 콤마(,)를 붙이지 않았을 때tuple2 = (0,) # 끝에 콤마(,)를 붙여줬을 때tuple3 = 0,1,2print(tuple1)print(tuple2)print(tuple3)print(type(tuple1)) # 콤마(,)를 붙여주지 않으면 튜플이 아닙니다.print(type(tuple2)) # 콤마(,)를 붙여주어야 튜플 자료형 입니다.print(type(tuple3)) # 여러개의 값 일경우 괄호를 없애주어도 튜플 자료형 입니다. 0 (0,) (0, 1, 2) &lt;class 'int'&gt; &lt;class 'tuple'&gt; &lt;class 'tuple'&gt; 12a = (0,1,2,3,'a')del a['a'] --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-41-c41b8ecfc68f&gt; in &lt;module&gt;() 1 a = (0,1,2,3,'a') ----&gt; 2 del a['a'] TypeError: 'tuple' object does not support item deletion 12a = (0,1,2,3,'a')a[1]='t' --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-42-04fb068f82e0&gt; in &lt;module&gt;() 1 a = (0,1,2,3,'a') ----&gt; 2 a[1]='t' TypeError: 'tuple' object does not support item assignment 튜플 인덱싱 및 슬라이싱 하기1234t = (0,1,2,'b',4)print(t[1])print(t[3]) 123t = (0,1,2,3,4)print(t[2:])print(t[0:2]) 더하기 및 곱셈 연산자 사용12345t1 = (0,1,2,3,4)t2 = ('a','b','c')t3 = t1+t2print(t1+t2)print(t3) 123t1 = ('a','b')print(t1*0)print(t1*3) 딕셔너리–value 값을 지정해주는것 12345dic = {'teacher':'alice', 'class': 5, 'studentid': '15', 'list':[1,2,3]}print(dic['teacher'])print(dic['class'])print(dic['list']) alice 5 [1, 2, 3] 12dic = {'teacher':'alice', 'class': 5, 'studentid': '15', 'list':[1,2,3]}print(dic['real']) --------------------------------------------------------------------------- KeyError Traceback (most recent call last) &lt;ipython-input-44-fd82dcc94904&gt; in &lt;module&gt;() 1 dic = {'teacher':'alice', 'class': 5, 'studentid': '15', 'list':[1,2,3]} ----&gt; 2 print(dic['real']) KeyError: 'real' 12a = {'name': 'bob', 'job': 'farmer', 'age': 35}a.keys() dict_keys(['name', 'job', 'age']) 12a = {'name': 'bob', 'job': 'farmer', 'age': 35}a.values() dict_values(['bob', 'farmer', 35]) 1234a = {'name': 'chris', 'job': 'painter', 'age': 30}print(a.get('name'))print(a.get('dinner'))print(a.get('dinner', 'empty')) chris None empty 집합 연산자12345678s = {}print(type(s))s = set()print(type(s))s = {1,2,3}print(type(s)) &lt;class 'dict'&gt; &lt;class 'set'&gt; &lt;class 'set'&gt; 1234567a = {1,3,5}b = {2,4,6}c = a|bd = a.union(b)print(&quot;a|b:&quot;, c)print(&quot;a.union(b)&quot;, d) a|b: {1, 2, 3, 4, 5, 6} a.union(b) {1, 2, 3, 4, 5, 6} 1234567891011a = {1,3,5}b = {2,4,6}c = a&amp;bprint(c)e = {1,2,5}f = {2,3,5}g1 = e&amp;fg2 = e.intersection(f)print(&quot;e&amp;f:&quot;, g1)print(&quot;e.intersection(f):&quot;, g2) set() e&amp;f: {2, 5} e.intersection(f): {2, 5} 1234567a = {1,3,5}b = {2,4,5}c1 = a-bc2 = a.difference(b)print(&quot;a-b:&quot;, c1)print(&quot;a.difference(b)&quot;, c2) a-b: {1, 3} a.difference(b) {1, 3} 1234567a = {1,2,3,4,5}b = {3,4,5,6,7}c1 = a^bc2 = a.symmetric_difference(b)print(&quot;a^b&quot;, c1)print(&quot;a.symmetric_difference(b)&quot;, c2) a^b {1, 2, 6, 7} a.symmetric_difference(b) {1, 2, 6, 7} if 조건문12345678910a = -5if a&gt;5: print('a is bigger than 5')elif a &gt; 0: print(&quot;a is bigger than 0 but a is smaller than 5 &quot;)else: print(&quot;a is negative&quot;) a is negative 반복문1 12for i in range(10000): print(&quot;Hello World&quot;) Hello World 1만번 출력 반복 1234567a = &quot;Kaggle&quot;for x in a: print(x) if x == 'g': break K a g 1 123alphabets = ['A', 'B', 'C']for index, value in enumerate(alphabets): print(index, value) 0 A 1 B 2 C 참고용URL:https://docs.python.org/3/tutorial/datastructures.html","link":"/2021/10/28/post/"},{"title":"project","text":"프로젝트 개요 기간: 2021년 9월 1일 ~ 10월 26일 파일 추가12$ git add . . : 모든 파일 커밋 메시지 (로그 메시지)1~ $ git commit -m &quot;UPDATED: README.md fixed&quot; 파일 최종 업로드1~ $ git push 파일 링크 복사후 생성할때바탕화면 git bash here 우클릭1~$ git clone (경로)","link":"/2021/11/02/project/"},{"title":"sql","text":"````–테이블 삭제DROP TABLE EMPLOYEE;DROP TABLE DEPARTMENT;DROP TABLE SALGRADE;–테이블 생성CREATE TABLE DEPARTMENT (DNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY, DNAME VARCHAR2(14), LOC VARCHAR2(13) ) ;CREATE TABLE EMPLOYEE (ENO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY, ENAME VARCHAR2(10), JOB VARCHAR2(9), MANAGER NUMBER(4), HIREDATE DATE, SALARY NUMBER(7,2), COMMISSION NUMBER(7,2), DNO NUMBER(2) CONSTRAINT FK_DNO REFERENCES DEPARTMENT);CREATE TABLE SALGRADE (GRADE NUMBER, LOSAL NUMBER, HISAL NUMBER );–테이블 데이터 입력INSERT INTO DEPARTMENT VALUES (10,’ACCOUNTING’,’NEW YORK’);INSERT INTO DEPARTMENT VALUES (20,’RESEARCH’,’DALLAS’);INSERT INTO DEPARTMENT VALUES (30,’SALES’,’CHICAGO’);INSERT INTO DEPARTMENT VALUES (40,’OPERATIONS’,’BOSTON’); INSERT INTO EMPLOYEE VALUES(7369,’SMITH’,’CLERK’, 7902,to_date(‘17-12-1980’,’dd-mm-yyyy’),800,NULL,20);INSERT INTO EMPLOYEE VALUES(7499,’ALLEN’,’SALESMAN’, 7698,to_date(‘20-2-1981’, ‘dd-mm-yyyy’),1600,300,30);INSERT INTO EMPLOYEE VALUES(7521,’WARD’,’SALESMAN’, 7698,to_date(‘22-2-1981’, ‘dd-mm-yyyy’),1250,500,30);INSERT INTO EMPLOYEE VALUES(7566,’JONES’,’MANAGER’, 7839,to_date(‘2-4-1981’, ‘dd-mm-yyyy’),2975,NULL,20);INSERT INTO EMPLOYEE VALUES(7654,’MARTIN’,’SALESMAN’,7698,to_date(‘28-9-1981’, ‘dd-mm-yyyy’),1250,1400,30);INSERT INTO EMPLOYEE VALUES(7698,’BLAKE’,’MANAGER’, 7839,to_date(‘1-5-1981’, ‘dd-mm-yyyy’),2850,NULL,30);INSERT INTO EMPLOYEE VALUES(7782,’CLARK’,’MANAGER’, 7839,to_date(‘9-6-1981’, ‘dd-mm-yyyy’),2450,NULL,10);INSERT INTO EMPLOYEE VALUES(7788,’SCOTT’,’ANALYST’, 7566,to_date(‘13-07-1987’, ‘dd-mm-yyyy’),3000,NULL,20);INSERT INTO EMPLOYEE VALUES(7839,’KING’,’PRESIDENT’, NULL,to_date(‘17-11-1981’,’dd-mm-yyyy’),5000,NULL,10);INSERT INTO EMPLOYEE VALUES(7844,’TURNER’,’SALESMAN’,7698,to_date(‘8-9-1981’, ‘dd-mm-yyyy’),1500,0,30);INSERT INTO EMPLOYEE VALUES(7876,’ADAMS’,’CLERK’, 7788,to_date(‘13-07-1987’, ‘dd-mm-yyyy’),1100,NULL,20);INSERT INTO EMPLOYEE VALUES(7900,’JAMES’,’CLERK’, 7698,to_date(‘3-12-1981’, ‘dd-mm-yyyy’),950,NULL,30);INSERT INTO EMPLOYEE VALUES(7902,’FORD’,’ANALYST’, 7566,to_date(‘3-12-1981’, ‘dd-mm-yyyy’),3000,NULL,20);INSERT INTO EMPLOYEE VALUES(7934,’MILLER’,’CLERK’, 7782,to_date(‘23-1-1982’, ‘dd-mm-yyyy’),1300,NULL,10); INSERT INTO SALGRADE VALUES (1, 700,1200);INSERT INTO SALGRADE VALUES (2,1201,1400);INSERT INTO SALGRADE VALUES (3,1401,2000);INSERT INTO SALGRADE VALUES (4,2001,3000);INSERT INTO SALGRADE VALUES (5,3001,9999);–커밋COMMIT;–확인하기select*from tab; selectfrom employees;selectfrom department;select*from salgrade;–내림차순정리desc employee;select *from tab;select sysdate from dual;desc dual; select eno,ename,salary,salary*12 from employee; select eno,ename,salary+nvl(commission,0),salary*12 as 연봉 from employee; select distinct dno from employee;select dno from employee; select*from employee where salary &gt;= 1500;select *from employee where job = ‘ANALYST’; select eno,ename,salary from EMPLOYEE where ename=SCOTT;select eno,ename,salary from employee where ename=’SCOTT’;select eno,ename,salary from employee where ename&gt;’SCOTT’;select*from employee where hiredate&lt;=’1981/01/01’; selectfrom employee where dno=10 and job =’MANAGER’;selectfrom employee where dno=10 or job = ‘MANAGER’;select*from employee where not dno=10; selectfrom employee where salary&gt;=1000 and salary&lt;=1500;select*from employee where salary&lt;1000 or salary&gt;1500;selectfrom employee where commission=300 or commission=500 or commission=1400; selectfrom employee where not salary between 1000 and 1500;selectfrom employee where hiredate between ‘1982/01/01’ and ‘1983/01/01’; selectfrom employee where commission in(300,500,1400);selectfrom employee where not commission in(300,500,1400); selectfrom employee where ename like ‘F%’;selectfrom employee where ename like ‘%M%’;select*from employee where ename like ‘%N’; selectfrom employee where ename like ‘_A%’;selectfrom employee where ename like ‘__A%’;select*from employee where not ename like ‘%A%’; select*from employee where commission is not null; select*from employee order by ename; –desc asc selectfrom employee order by salary asc;selectfrom employee order by salary desc; select*from employee order by salary desc,ename asc; –1.select ename,salary,salary+300 from employee; –2.select ename,salary,salary12+100 from employee order by salary12+100 desc; –3.select ename,salary from employee where salary&gt;2000 order by salary desc; –4.select eno,ename,dno from employee where eno=7788; –5.select ename,salary from employee where not salary&gt;2000 and salary&lt;3000; –6.select ename,job,hiredate from employee where hiredate between ‘1981-02-20’ and ‘1981-05-01’; –7.select dno,ename from employee where dno in(20,30) order by ename desc; –8.select ename,dno,salary from employee where salary&gt;=2000 and salary&lt;=3000 and dno=20 or dno=30 order by ename; –9.select ename,hiredate from employee where hiredate like ‘81%’; –10.select ename,job from employee where manager is null; –11.select ename,salary,commission from employee where not commission=0 order by salary,commission desc; –12.select*from employee where ename like ‘__R%’; –13.select*from employee where ename like ‘%A%’ and ename like ‘%E’; –14.select ename,job,salary from employee where (job=’CLERK’ or job=’SALESMAN’) and not salary in(1600,950,1300); –15.select ename,salary,commission from employee where commission&gt;=500; select to_char(sysdate,’yy/mm/dd/dy’) from dual; select ename, to_char(salary,’l999,999’) from employee; select ename,hiredate from employee where hiredate=to_date(810220); select to_number(‘50,000’,’999,999’) from dual; select to_char(salary,’9999,99’)from employee; –0은 없는수는 0으로 효기 9는 아에 안뜸 –sum()합계 avg()평균 max()최대값 min()최소값 count()행의 개수 count(distinct)행의개수(중복1개만)–stdev()표준편차 variance()분산 select sum(salary) as “급여총액” from employee;–max–min–avg select max(hiredate),min(hiredate) from employee;select sum(commission) as “커미션 총액” from employee; select count(commission) as “사원 수” from employee where commission is not null; select count(distinct dno)from employee; select job from employee order by job asc;select count(job) as “직업 수 “ from employee;select count(distinct job) as “중복제외 직업수” from employee; select avg(salary) as “급여평균” from employee group by dno;select ename as “이름”,dno as “부서번호” , avg(salary) from employee group by dno,ename; select dno,job, sum(salary) from employee group by dno,job order by dno asc, job asc;– 정렬 순서 상관있음 앞에있는게 먼저 정렬 select job,sum(salary) as “ 총액”,round(avg(salary),1) as “평균액” from employee having avg(salary)&gt;=2000 group by job;–1.부서별 최고 급여 3000 이상 부서 번호 와 부서별 최고 급여select job as “부서”,dno as “부서번호”,max(salary) as “최고급여” from employee having max(salary)&gt;=3000 group by job,dno;–2.매니저 제외 급여총액 5000이상 담당업무별 급여 총액과 해당인원select job as “담당업무”,count(job) as “해당 인원”,sum(salary) as “급여 총액” from employee where job not like ‘MANAGER’ group by job having sum(salary)&gt;=5000;–3.부서별 평균 급여중 최고 평균 급여 조회select max(avg(salary))as “최고평균급여” from employee group by dno; –ROLLUP() 중간 합계select job,sum(salary) from employee group by rollup(job); –1번문제select max(salary),min(salary),sum(salary),round(avg(salary)) from employee;–2번문제select job,max(salary),min(salary),sum(salary),round(avg(salary)) from employee group by job;–3번문제select job,count(job) from employee group by job;–4번문제select count(*) from employee where job like ‘%MANAGER%’;select count(distinct(manager)) from employee;–문제이상해–5번문제select max(salary)-min(salary)as “difference” from employee;–6번문제select job,min(salary) from employee where MANAGER is not null group by job having not min(salary)&lt;2000 order by min(salary) desc;–7번문제select dno,count(job),round(avg(salary),2) from employee group by dno; –내장함수select ascii(‘t’) from dual;select chr(116) from dual;select asciistr(‘천’) from dual;select unistr(‘\\CC9C’) from dual; select length(‘한글’), lengthb(‘한글’), lengthc(‘한글’)from dual;–문자열 함수 select concat(‘이것은’,’오라클이다’),’이것이’||’오라클’||’이다’ from dual;select instr(‘이것이 oracle이다. 이것도 오라클이다.’,’이것’)from dual;select instr(‘이것이 oracle이다. 이것도 오라클이다.’,’이것’,16)from dual; –문자열select instrb(‘이것이 oracle이다. 이것도 오라클이다.’,’이것’,2)from dual; –바이트단위 select lower(‘abcdefgh’),upper(‘abcdefgh’),initcap(‘thIs is oraCLe’) from dual;–lower 소문자 upper대문자 initcap 앞부분 대문자치환select replace(‘이것이 oracle이다’,’이것이’,’this is’) from dual;select translate(‘이것이 oracle이다’,’이것’,’ab’) from dual; select ename, lower(ename), job,initcap(job) from employee; –대소문자유의select eno,ename,dno from employee where ename=’scott’;select eno,ename,dno from employee where ename=upper(‘scott’);select eno,ename,dno from employee where initcap(ename)=’Scott’; select substr(‘대한독립만세’,2,5) from dual; –2가 글자열 5가 길이select reverse(‘oracle’) from dual;select lpad(‘이것이’,10,’웅’) from dual; –lpad rpadselect ltrim(‘ 이번생은’),rtrim(‘응앵ㅋㅋㅋㅋ’,’ㅋ’)from dual; –ltrim rtrimselect trim(‘ 이번생은 ‘), trim(both ‘ㅋ’ from ‘ㅋㅋㅋ망했어욬ㅋㅋㅋ’) from dual;select regexp_count(‘이것이 오라클이다.’,’이’) from dual; select*from employee where substr(ename,-1,1)=’N’; select*from employee where substr(hiredate,1,2)=’87’; select lpad(salary,10,’#’) from employee; select rpad(salary,10,’#’) from employee; select add_months(‘2020-01-01’,5), add_months(sysdate,-5) from dual; select to_date(‘2020-01-01’)+5,sysdate-5 from dual; select current_date,sysdate,current_timestamp from dual; select extract(year from date ‘2019-06-27’), extract(day from sysdate) from dual; select last_day(‘2019-05-05’) from dual; select next_day(‘2020-01-03’,’월요일’), next_day(sysdate,’일요일’) from dual; select months_between(sysdate,’1985-02-17’) from dual; select hiredate,trunc(hiredate,’month’) from employee; select round(sysdate-hiredate) as 근무일수 from employee; select sysdate, next_day(sysdate,’토요일’) from dual; select ename,hiredate,add_months(hiredate,6) from employee; select ename, sysdate,hiredate, trunc(months_between(sysdate, hiredate)) from employee; select ename,hiredate,last_day(hiredate) from employee; select ename,salary, commission, nvl(commission,0), salary*12+nvl(commission,0) from employee; select ename, salary,commission, nvl2(commission,salary12+commission,salary12) from employee; select nullif(‘a’,’a’), nullif(‘a’,’b’) from dual; select ename,salary,commission, coalesce(commission,salary,0) from employee; select ename,dno,decode(dno,10, ‘accounting’, 20,’research’,30,’sales’,40,’operations’,’default’) as dename from employee; select ename,dno, case when dno=10 then ‘accounting’ when dno=20 then ‘research’ when dno=30 then ‘sales’ when dno=40 then ‘operations’ else ‘default’ end as dename from employee; –1번문제select substr(hiredate,1,5) from employee;–2번문제select*from employee where substr(hiredate,5,1)=’4’;–3번문제–1번문제 create table productsTbl(productid char(20),productName nvarCHAR2(20) not null,price Number() not null,amount Number() not null); create table customerTbl(customerid char(10),customername nvarchar2(20) not null,customerAddr nvarchar2(100) not null,customerContact char(11)not null); create table tradeTbl(tradeno char(10),productid char(10)not null,customerid char(10)not null,tradeAmount number(*)not null); alter table productstbl add constraint pk_productsTbl_productid primary key(productid);alter table customerTbl add constraint pk_customertbl_customerid primary key(customerid);alter table tradeTbl add constraint pk_tradeTbl_tradeNo primary key(tradeNo); alter table tradetbladd constraint tradetbl_productstbl_FK foreign key(productid) references productstbl(productid);alter table tradetbladd constraint tradetbl_customertbl_KR foreign key(customerid) references customertbl(customerid); insert into productstblvalues(‘b001’,’JAVA’,’20000’,’100’);insert into productstblvalues(‘b002’,’HTMLCSS’,’15000’,’150’);insert into productstblvalues(‘b003’,’Python’,’17500’,’200’);insert into productstblvalues(‘b004’,’javaScript’,’17000’,’150’);insert into productstblvalues(‘b005’,’Oracle’,’25000’,’75’); insert into customertblvalues(‘S001’,’수주IT그룹’,’경기도 수원시’,01012345678);insert into customertblvalues(‘N001’,’남양 소프트웨어’,’경기도 화성시’,01014753695);insert into customertblvalues(‘K001’,’과주 IDC센터’,’경기도 과천시’,01014753695);insert into customertblvalues(‘K002’,’금주정보통신’,’경기도 시흥시’,01098753215);insert into customertblvalues(‘S002’,’서원 소프트’,’경기도 용인시’,01012357895); insert into tradetblvalues(‘t001’,’b003’,’S002’,30);insert into tradetblvalues(‘t002’,’b003’,’N001’,40);insert into tradetblvalues(‘t003’,’b004’,’S002’,20);insert into tradetblvalues(‘t004’,’b005’,’N001’,40);insert into tradetblvalues(‘t005’,’b004’,’K002’,50); commit; selectfrom productstbl;selectfrom customertbl;select*from tradetbl;","link":"/2021/11/02/sql/"},{"title":"upload","text":"google colab 파일 github에 저장하기 파일에서 github에 사본 저장google colab 파일 마크다운형식으로 가져오기 파일-&gt;다운로드 -&gt;.ipynb 해당 파일클릭 Markdown 클릭후 해당 폴더를 연후 드래그 하면 끝","link":"/2021/11/02/upload/"},{"title":"visualization","text":"visualization객체지향 fig,ax 사용하기(많은 데이터를 처리하기 용이)세가지 방법으로 데이터 시각화 가능1234567891011121314import matplotlib.pyplot as pltdates = [ '2021-01-01', '2021-01-02', '2021-01-03', '2021-01-04', '2021-01-05', '2021-01-06', '2021-01-07', '2021-01-08', '2021-01-09', '2021-01-10']min_temperature = [20.7, 17.9, 18.8, 14.6, 15.8, 15.8, 15.8, 17.4, 21.8, 20.0]max_temperature = [34.7, 28.9, 31.8, 25.6, 28.8, 21.8, 22.8, 28.4, 30.8, 32.0]fig, ax = plt.subplots()ax.plot(dates, min_temperature, label = &quot;Min Temp&quot;)ax.plot(dates, max_temperature, label = &quot;Max Temp&quot;)ax.legend()plt.show() plot(x,y)의 x,y는 각각 x축과 y축값이 된다. 1234567891011121314import matplotlib.pyplot as pltdates = [ '2021-01-01', '2021-01-02', '2021-01-03', '2021-01-04', '2021-01-05', '2021-01-06', '2021-01-07', '2021-01-08', '2021-01-09', '2021-01-10']min_temperature = [20.7, 17.9, 18.8, 14.6, 15.8, 15.8, 15.8, 17.4, 21.8, 20.0]max_temperature = [34.7, 28.9, 31.8, 25.6, 28.8, 21.8, 22.8, 28.4, 30.8, 32.0]fig, axes = plt.subplots(nrows=1, ncols=1, figsize=(10,6))axes.plot(dates, min_temperature, label = 'Min Temperature')axes.plot(dates, max_temperature, label = 'Max Temperature')axes.legend()plt.show() 12print(fig)print(axes) Figure(720x432) AxesSubplot(0.125,0.125;0.775x0.755) Matplotlib선 그래프 흐름 변화 확인 용도 방법 1. Pyplot API 코드 변경됨 참조: https://pypi.org/project/fix-yahoo-finance/ 1!pip install yfinance --upgrade --no-cache-dir 설치 123import yfinance as yfdata = yf.download('AAPL', '2019-08-01', '2020-08-01')data.info() 12ts = data['Open']print(ts.head()) 방법 2. 객체지향 API123456789101112131415from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvasfrom matplotlib.figure import Figureimport matplotlib.pyplot as pltfig = Figure()import numpy as npnp.random.seed(6)x = np.random.randn(20000)ax = fig.add_subplot(111)ax.hist(x, 100)ax.set_title('Artist Layer Histogram')# fig.savefig('Matplotlib_histogram.png')plt.show() 방법 3. Pyplot API + 객체지향 API ax.set_title(“제목”) ax.set_xlabel(“x축 이름”) ax.set_ylabel(“y축 이름”) as.legend([]) -&gt; 범례 12345678910111213import yfinance as yfimport matplotlib.pyplot as pltdata = yf.download('AAPL','2019-08-01','2020-08-01')ts = data['Open']fig, ax=plt.subplots(figsize=(10,6))ax.plot(ts)ax.set_title('Stock Market Fluctuation of AAPL')ax.legend(labels=['Price'], loc='best')ax.set_xlabel('Date')ax.set_ylabel('Stock Market Open Price')plt.show() [*********************100%***********************] 1 of 1 completed 123456789101112131415# import fix_yahoo_finance as yfimport yfinance as yfimport matplotlib.pyplot as pltdata = yf.download('AAPL', '2019-08-01', '2020-08-01')ts = data['Open']fig, ax = plt.subplots(figsize=(10, 6)) # 직접 Figure 객체 생성# ax= fig.subplots() # 직접 axes를 생성ax.plot(ts) # 생성된 axes 에 대한 plot() 멤버 직접 호출 ax.set_title('Stock Market fluctuation of AAPL')ax.legend(labels=['Price'], loc='best')ax.set_xlabel('Date')ax.set_ylabel('Stock Market Open Price')plt.show() [*********************100%***********************] 1 of 1 completed 막대 그래프카테고리 별로 수치 비교 확인용 1234567891011121314151617import matplotlib.pyplot as pltimport numpy as npimport calendarmonth_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]sold_list = [300, 400, 550, 900, 600, 960, 900, 910, 800, 700, 550, 450]fig, ax = plt.subplots(figsize=(10,6))plt.xticks(month_list, calendar.month_name[1:13], rotation=90)plot = ax.bar(month_list, sold_list)for rect in plot: print(&quot;graph:&quot;, rect) height = rect.get_height() ax.text(rect.get_x() + rect.get_width()/2., 1.002*height,'%d' % int(height), ha='center', va='bottom')plt.show() 산점도 그래프 두개의 연속형 변수 (키, 몸무게 등) 상관관계 != 인과관계 산점도 (Scatter plot)는 두 변수의 상관 관계를 직교 좌표계의 평면에 점으로 표현하는 그래프 123456789101112131415import matplotlib.pyplot as pltimport seaborn as sns# 내장 데이터tips = sns.load_dataset(&quot;tips&quot;)x = tips['total_bill']y = tips['tip']fig, ax = plt.subplots(figsize=(10, 6))ax.scatter(x, y)ax.set_xlabel('Total Bill')ax.set_ylabel('Tip')ax.set_title('Tip ~ Total Bill')fig.show() 1label, data = tips.groupby('sex') 123456789101112tips['sex_color'] = tips['sex'].map({&quot;Female&quot; : &quot;#0000FF&quot;, &quot;Male&quot; : &quot;#00FF00&quot;})fig, ax = plt.subplots(figsize=(10, 6))for label, data in tips.groupby('sex'): ax.scatter(data['total_bill'], data['tip'], label=label, color=data['sex_color'], alpha=0.5) ax.set_xlabel('Total Bill') ax.set_ylabel('Tip') ax.set_title('Tip ~ Total Bill by Gender')ax.legend()fig.show() 히스토그램 수치형 변수 1개 막대그래프와 비슷하지만 구간 지정 그래프화 12345678910111213141516import matplotlib.pyplot as pltimport numpy as npimport seaborn as sns# 내장 데이터 titanic = sns.load_dataset('titanic')age = titanic['age']nbins = 21fig, ax = plt.subplots(figsize=(10, 6))ax.hist(age, bins = nbins)ax.set_xlabel(&quot;Age&quot;)ax.set_ylabel(&quot;Frequency&quot;)ax.set_title(&quot;Distribution of Aae in Titanic&quot;)ax.axvline(x = age.mean(), linewidth = 2, color = 'r')fig.show() 박스플롯 x축 변수: 범주형 변수, 그룹과 관련있는 변수, 문자열 y축 변수: 수치형 변수 박스형태로 그래프화 하여 최소,최대 구간을 표시하여 박스크기와 위치에 따라 데이터를 분석가능 12345678910111213import matplotlib.pyplot as pltimport seaborn as snsiris = sns.load_dataset('iris')data = [iris[iris['species']==&quot;setosa&quot;]['petal_width'], iris[iris['species']==&quot;versicolor&quot;]['petal_width'], iris[iris['species']==&quot;virginica&quot;]['petal_width']]fig, ax = plt.subplots(figsize=(10, 6))ax.boxplot(data, labels=['setosa', 'versicolor', 'virginica'])fig.show() 히트맵123456789101112131415import matplotlib.pyplot as pltimport numpy as npimport seaborn as sns# 내장 데이터flights = sns.load_dataset(&quot;flights&quot;)flights = flights.pivot(&quot;month&quot;, &quot;year&quot;, &quot;passengers&quot;)fig, ax = plt.subplots(figsize=(12, 6))im = ax.imshow(flights, cmap = 'YlGnBu')ax.set_xticklabels(flights.columns, rotation = 20)ax.set_yticklabels(flights.index, rotation = 10)fig.colorbar(im)fig.show() Seaborn산점도와 회귀선이 있는 산점도 seaborn 참고 url:https://jjeongil.tistory.com/775 12345678%matplotlib inline import matplotlib.pyplot as pltimport seaborn as snstips = sns.load_dataset(&quot;tips&quot;)sns.scatterplot(x = &quot;total_bill&quot;, y = &quot;tip&quot;, data = tips)plt.show() 1234567891011121314fig, ax = plt.subplots(nrows = 1, ncols = 2, figsize=(15, 5))sns.regplot(x = &quot;total_bill&quot;, y = &quot;tip&quot;, data = tips, ax = ax[0], fit_reg = True)sns.regplot(x = &quot;total_bill&quot;, y = &quot;tip&quot;, data = tips, ax = ax[1], fit_reg = False)plt.show() 히스토그램/커널 밀도 그래프12345678import matplotlib.pyplot as pltimport seaborn as snstips = sns.load_dataset(&quot;tips&quot;)sns.displot(x = &quot;tip&quot;, data = tips)plt.figure(figsize=(10, 6))plt.show() &lt;Figure size 720x432 with 0 Axes&gt; 12sns.displot(x=&quot;tip&quot;, kind=&quot;kde&quot;, data=tips)plt.show() 12sns.displot(x=&quot;tip&quot;, kde=True, data=tips)plt.show() 박스플롯123sns.boxplot(x = &quot;day&quot;, y = &quot;total_bill&quot;, data = tips)sns.swarmplot(x = &quot;day&quot;, y = &quot;total_bill&quot;, data = tips, alpha = .25)plt.show() 막대 그래프12sns.countplot(x = &quot;day&quot;, data = tips)plt.show() 123print(tips['day'].value_counts())print(&quot;index: &quot;, tips['day'].value_counts().index)print(&quot;values: &quot;, tips['day'].value_counts().values) Sat 87 Sun 76 Thur 62 Fri 19 Name: day, dtype: int64 index: CategoricalIndex(['Sat', 'Sun', 'Thur', 'Fri'], categories=['Thur', 'Fri', 'Sat', 'Sun'], ordered=False, dtype='category') values: [87 76 62 19] 1print(tips['day'].value_counts(ascending=True)) Fri 19 Thur 62 Sun 76 Sat 87 Name: day, dtype: int64 1plt.show() 123456ax = sns.countplot(x = &quot;day&quot;, data = tips, order = tips['day'].value_counts().index)for p in ax.patches: height = p.get_height() ax.text(p.get_x() + p.get_width()/2., height+3, height, ha = 'center', size=9)ax.set_ylim(-5, 100)plt.show() 12345678ax = sns.countplot(x = &quot;day&quot;, data = tips, hue = &quot;sex&quot;, dodge = True, order = tips['day'].value_counts().index)for p in ax.patches: height = p.get_height() ax.text(p.get_x() + p.get_width()/2., height+3, height, ha = 'center', size=9)ax.set_ylim(-5, 100)plt.show() 상관관계 그래프12345678910import pandas as pd import numpy as np import seaborn as snsimport matplotlib.pyplot as pltmpg = sns.load_dataset(&quot;mpg&quot;)print(mpg.shape) # 398 행, 9개 열num_mpg = mpg.select_dtypes(include = np.number)print(num_mpg.shape) # 398 행, 7개 열 (398, 9) (398, 7) 1num_mpg.info() &lt;class 'pandas.core.frame.DataFrame'&gt; RangeIndex: 398 entries, 0 to 397 Data columns (total 7 columns): # Column Non-Null Count Dtype --- ------ -------------- ----- 0 mpg 398 non-null float64 1 cylinders 398 non-null int64 2 displacement 398 non-null float64 3 horsepower 392 non-null float64 4 weight 398 non-null int64 5 acceleration 398 non-null float64 6 model_year 398 non-null int64 dtypes: float64(4), int64(3) memory usage: 21.9 KB 1num_mpg.corr() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } mpg cylinders displacement horsepower weight acceleration model_year mpg 1.000000 -0.775396 -0.804203 -0.778427 -0.831741 0.420289 0.579267 cylinders -0.775396 1.000000 0.950721 0.842983 0.896017 -0.505419 -0.348746 displacement -0.804203 0.950721 1.000000 0.897257 0.932824 -0.543684 -0.370164 horsepower -0.778427 0.842983 0.897257 1.000000 0.864538 -0.689196 -0.416361 weight -0.831741 0.896017 0.932824 0.864538 1.000000 -0.417457 -0.306564 acceleration 0.420289 -0.505419 -0.543684 -0.689196 -0.417457 1.000000 0.288137 model_year 0.579267 -0.348746 -0.370164 -0.416361 -0.306564 0.288137 1.000000 1234567891011fig, ax = plt.subplots(nrows = 1, ncols = 2, figsize=(16, 5))# 기본 그래프 [Basic Correlation Heatmap]sns.heatmap(num_mpg.corr(), ax=ax[0])ax[0].set_title('Basic Correlation Heatmap', pad = 12)# 상관관계 수치 그래프 [Correlation Heatmap with Number]sns.heatmap(num_mpg.corr(), vmin=-1, vmax=1, annot=True, ax=ax[1])ax[1].set_title('Correlation Heatmap with Number', pad = 12)plt.show() 12print(int(True))np.triu(np.ones_like(num_mpg.corr())) 1 array([[1., 1., 1., 1., 1., 1., 1.], [0., 1., 1., 1., 1., 1., 1.], [0., 0., 1., 1., 1., 1., 1.], [0., 0., 0., 1., 1., 1., 1.], [0., 0., 0., 0., 1., 1., 1.], [0., 0., 0., 0., 0., 1., 1.], [0., 0., 0., 0., 0., 0., 1.]]) 12mask = np.triu(np.ones_like(num_mpg.corr(), dtype=np.bool))print(mask) [[ True True True True True True True] [False True True True True True True] [False False True True True True True] [False False False True True True True] [False False False False True True True] [False False False False False True True] [False False False False False False True]] 123456789fig, ax = plt.subplots(figsize=(16, 5))# 기본 그래프 [Basic Correlation Heatmap]ax = sns.heatmap(num_mpg.corr(), mask=mask, vmin=-1, vmax = 1, annot=True, cmap=&quot;BrBG&quot;, cbar = True)ax.set_title('Triangle Correlation Heatmap', pad = 16, size = 16)fig.show() Intermediate페가블로그 코드 https://jehyunlee.github.io/2020/08/27/Python-DS-28-mpl_spines_grids/","link":"/2021/11/03/visualization/"},{"title":"plotly02","text":"필사 123456789101112import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport plotly.express as pximport plotly.graph_objects as gofrom warnings import filterwarningsfilterwarnings('ignore')colors = ['#B1EDED','#B1B2ED','#1DE7ED','#1DA5ED','#1D50ED','#16548E']df = pd.read_csv('../input/kaggle/kaggle_survey_2021_responses.csv')df.head() 123456fig = go.Figure( data=[go.Pie(labels = df['Q2'][1:].value_counts().index, # 값에 붙일 이름 values = df['Q2'][1:].value_counts().values, # 나타낼 값 textinfo = 'label+percent')]) # 그래프 항목당 나타낼 텍스트fig.update_traces(marker=dict(colors=colors[2:])) # 그래프를 어떤 색으로 표현할 것인지fig.update_layout(title_text='Gender Distribution', showlegend=False) # 그래프의 레이아웃 설정fig.show() 123456789101112131415161718192021222324252627282930man = df[df['Q2'] == 'Man']['Q1'].value_counts() # 성별이 남성[df['Q2'] == 'Man']인 행에서 나이['Q1']의 값을 카운트하여 시리즈로 만듦.woman = df[df['Q2'] == 'Woman']['Q1'].value_counts() # 성별이 여성[df['Q2'] == 'WoMan']인 행에서 나이['Q1']의 값을 카운트하여 시리즈로 만듦.textonbar_man = [ round((m/(m+w))*100, 1) for m, w in zip(man.values, woman.values)]textonbar_woman = [ round((w/(m+w))*100, 1) for m, w in zip(man.values, woman.values)]fig = go.Figure(data=[ go.Bar(name='Man', # 막대의 항목이름 x=man.index, # x축에 man의 인덱스 y=man.values, # y축에 man의 값 text=textonbar_man, # 막대의 값을 작성해줄 텍스트 marker_color=colors[2]), #막대 색 go.Bar(name='Woman', x=woman.index, y=woman.values, text=textonbar_woman, marker_color=colors[3])])fig.update_traces( texttemplate='%{text:.3s}%', # 수치가 그래프에서 어느정도 멀어지는지 textposition='inside') # 값의 위치fig.update_layout( barmode='stack', # 막대의 형태 title_text='Age distribution by gender', # 제목 xaxis_title='Age', # x축 제목 yaxis_title='Counts') # y축 제목fig.show() REFERENCEhttps://plotly.com/python-api-reference/index.html","link":"/2021/11/09/plotly02/"},{"title":"plotly03","text":"필사 123456789101112import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport plotly.express as pximport plotly.graph_objects as gofrom warnings import filterwarningsfilterwarnings('ignore')colors = ['#B1EDED','#B1B2ED','#1DE7ED','#1DA5ED','#1D50ED','#16548E']df = pd.read_csv('../input/kaggle/kaggle_survey_2021_responses.csv')df.head() 12345678fig = px.funnel_area(names=df['Q6'][1:].value_counts().index, values=df['Q6'][1:].value_counts().values, title='Coding Experince')# 피규어 모형: funnel_area 깔때기형 차트, 데이터프레임 Q6 불러오기 및 (index)값 출력, [배열순서 1번행부터 시작], # 피규어 모형: funnel_area 깔때기형 차트, 데이터프레임 Q6 불러오기 및 (values)값 출력, [배열순서 1번행부터 시작], 제목 'Coding Experince'fig.update_traces(marker=dict(colors=colors[::-1]))# 모형 업데이트: 모형 지정, 색 한칸당 -1 단계씩 변하도록 변경fig.show()# 모형 작동 123456789101112131415#퍼센트 표기 예시용코드df1 = df['Q1'].value_counts()df2 = df['Q1'].value_counts(normalize = True)val_pnt_df = pd.DataFrame({&quot;count&quot;:df1,&quot;%&quot;:df2*100})fig = go.Figure()# [str(x) + ' %' for x in np.round(val_pnt_df[&quot;%&quot;].values, 1).tolist()]# Add Tracesfig.add_bar(x = val_pnt_df.index, y = val_pnt_df['count'].values, text = [str(x) + ' %' for x in np.round(val_pnt_df[&quot;%&quot;].values, 1).tolist()], textposition=&quot;auto&quot;)fig.update_layout(title_text = &quot;Q1. questions[1]&quot;)fig.show() 12345678910111213141516171819df_py = df[(df['Q7_Part_1'] == 'Python')]df_r = df[(df['Q7_Part_2'] == 'R')]# 데이터프레임 파이썬 Q7_Part_1 불러오기# 데이터프레임 R Q7_Part_2 불러오기fig = go.Figure(data=[ go.Bar(name='Python', x=df_py['Q1'].value_counts().index, y=df_py['Q1'].value_counts().values, marker_color=colors[2]), go.Bar(name='R', x=df_r['Q1'].value_counts().index, y=df_r['Q1'].value_counts().values, marker_color=colors[3])])# 피규어 생성, 바 이름: 파이썬, x축 파이썬 데이터프레임에 Q1 불러오기, index 고유값 출력# y축 파이썬 데이터프레임에 Q1 불러오기, values 고유값 출력# 마커색 2번 (하늘색)# 바 이름: R, x축 R 데이터프레임에 Q1 불러오기, index 고유값 출력# y축 R 데이터프레임에 Q1 불러오기, values 고유값 출력# 마커색 3번 (파랑색)fig.update_layout(barmode='group', title='Kagglers using Python and R on regular basis by Age', xaxis_title='Age', yaxis_title='Counts')fig.show()# 그래프 그룹형, 피규어 타이틀 'Kagglers using Python and R on regular basis by Age', X축 소제목 'Age', Y축 소제목 'Counts'","link":"/2021/11/09/plotly03/"},{"title":"plotly04","text":"123456789101112import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport plotly.express as pximport plotly.graph_objects as gofrom warnings import filterwarningsfilterwarnings('ignore')colors = ['#B1EDED','#B1B2ED','#1DE7ED','#1DA5ED','#1D50ED','#16548E']df = pd.read_csv('../input/kaggle/kaggle_survey_2021_responses.csv')df.head() 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354# df_env를 dataframe 변수형식 객체로 지정df_env = pd.DataFrame()print(df_env)# value_counts 함수# (https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.value_counts.html?highlight=value_counts#pandas.DataFrame.value_counts)## df_env객체에 dev_env 칼럼을 삽입하고 df 객체의 21~34 칼럼에 해당하는 index를 뽑아서 0에 위치한 값을 저장df_env['dev_env'] = [df[col][1:].value_counts().index[0] for col in df.columns[21:34]]print(df_env)## df_env객체에 counts 칼럼을 삽입하고 df 객체의 21~34 칼럼에 해당하는 value를 뽑아서 0에 위치한 값을 저장df_env['counts'] = [df[col][1:].value_counts().values[0] for col in df.columns[21:34]]print(df_env)# sort_values 함수# https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.sort_values.html#pandas.DataFrame.sort_values## df_env 객체에 정렬 기준점을 'counts' colums로 잡고 오름차순(ascending)으로 정렬할지를 설정한다. inplace = True인 경우 해당 정렬을 객체에서 수행한다.df_env.sort_values(by='counts', ascending=False, inplace=True)print(df_env)# plotly.express.treemap # high-level interface# H: https://plotly.com/python-api-reference/generated/plotly.express.treemap.html# L: https://plotly.com/python-api-reference/generated/plotly.graph_objects.Treemap.html#id1## treemap figure로 시각화fig = px.treemap(df_env, path=[px.Constant(&quot;all&quot;),'dev_env'], values='counts', color='counts', color_continuous_scale=colors)# treemap(DF형식 객체, path(경로)=[# path 해석: all 이라는 상수를 만들어 dev_env 칼럼 전체를 삽입했다],# values(정렬기준)='객체', color='비율을 color로 표현(우측에 counts에 관한 기준 표현)')# color_continuous_scale='CSS 형식의 색상을 정의해서 원하는 연속적인 색상으로 표현'# figure # figure 경로 업데이트fig.update_traces(root_color=&quot;red&quot;)# root 오퍼레이터의 color 변경# [root] https://plotly.com/python-api-reference/generated/plotly.graph_objects.icicle.html#plotly.graph_objects.icicle.Root# but, color 표현의 방식이 counts의 비율로 설정되었기 때문에 적용되지 않는다.(by: color='counts')# figure 구조를 업데이트하고 타이틀 지정fig.update_layout(title='Development environment used by kagglers')fig.show()","link":"/2021/11/09/plotly04/"},{"title":"graph","text":"123456789import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport plotly.express as pximport plotly.graph_objects as gofrom warnings import filterwarningsfilterwarnings('ignore')colors = ['#B1EDED','#B1B2ED','#1DE7ED','#1DA5ED','#1D50ED','#16548E'] 123#데이터불러오기df = pd.read_csv('../input/123123123123/kaggle_survey_2021_responses.csv')df.head() 1234#불러온 데이터값중 분류하고 하는 데이터프레임으로 나누기df = df[df.Q3.isin([&quot;Japan&quot;,&quot;China&quot;])]print(df.shape)df.sample(5) #5줄로 샘플표시 Age 막대그래프123# 데이터 프레임 정의df_ch = df[df.Q3.isin([&quot;China&quot;])]df_ja = df[df.Q3.isin([&quot;Japan&quot;])] 12345678910df_ch_sort = df_ch['Q1'].value_counts().sort_index()df_ja_sort = df_ja['Q1'].value_counts().sort_index()# sort 명령어로 x축 정리fig = go.Figure(data=[ go.Bar(name='Japan', x=df_ja_sort.index, y=df_ja_sort.values, marker_color=colors[3]), go.Bar(name='China', x=df_ch_sort.index, y=df_ch_sort.values, marker_color=colors[2])])fig.update_layout(barmode='group', title='China &amp; Japan Age', xaxis_title='Age', yaxis_title='Counts')fig.show() Gender Pie 그래프12345# 중국데이터프레임을 가지고 파이그래프 그리기fig = go.Figure(data=[go.Pie(labels=df_ch['Q2'][1:].value_counts().index, values=df_ch['Q2'][1:].value_counts().values, textinfo='label+percent')])fig.update_traces(marker=dict(colors=colors[2:]))fig.update_layout(title_text='China Gender Distribution', showlegend=True)fig.show() 12345# 일본데이터 프레임을 가지고 파이그래프 그리기fig = go.Figure(data=[go.Pie(labels=df_ja['Q2'][1:].value_counts().index, values=df_ja['Q2'][1:].value_counts().values, textinfo='label+percent')])fig.update_traces(marker=dict(colors=colors[2:]))fig.update_layout(title_text='Japan Gender Distribution', showlegend=True)fig.show()","link":"/2021/11/12/graph/"},{"title":"error","text":"에러IndexError: index 0 is out of bounds for axis 0 with size 0 123456#index 값출력 도중 에러발생df_CQ7 = pd.DataFrame()df_CQ7['Q7'] = [df_Ch[col][1:].value_counts().index[0] for col in df_Ch.columns[7:20]]df_CQ7['counts'] = [df_Ch[col][1:].value_counts().values[0] for col in df_Ch.columns[7:20]]print(df_CQ7) value값이 0인 칼럼을 제거 했더니 오류가 없어졌다. 1df21_Ch_rmQ7P12 = df21_Ch.drop(['Q7_Part_12'], axis='columns') 정상출력","link":"/2021/11/16/error/"},{"title":"kaggle","text":"kaggle 대회 참여텍스트 정리kaggle-survey-2021 ###목차 서론 선정이유 동아시아중 가장 큰 영향력을 행사 비슷한 캐글러의 분포를 가지고 있음 개요 주제 중국 vs 일본 캐글러 최신 트렌드 2019년도 자료와 2021년도 자료기반 비교 본론 질문선정 배경 (시각화로 가장 뚜렷하게 보여줄 수 있는 특징을 지님)중국과 일본의 공통점과 차이점 분석 및 시각화 Q3 In which country do you currently reside? 중국과 일본 두 나라 모두 눈에 띄게 2019년도에 비해 캐글러들의 숫자가 증가 Q1 What is your age? 두 나라 모두 젊은층에서의 분포가 가장 높게 나타남 일본은 중국에 비해 다양한 연령대의 분포도를 보임 두 나라 모두 2019년과 비교해 2021년에는 18-21의 지표가 증가 Q2 What is your gender? 일본과 중국 남성이 우세한 지표를 보임 일본은 남성이 90% 여성이 8% 중국은 남성이 80% 여성이 14% 과거와 현재에도 미미한 차이를 보이고 있음 Q7 What programming languages do you use on a regular basis? 일본과 중국에서 주로 사용하는 언어는 ‘Python’ 전체 언어 비율 중 대부분을 차지 일본은 ‘2019년’에는 전체 언어 중 ‘Python’이 약 ‘39%’를 차지 중국은 ‘2019년’에는 전체 언어 중 ‘Python’이 약 ‘40%’를 차지 일본은 ‘2021년’에는 전체 언어 중 ‘Python’이 약 ‘38%’를 차지 중국은 ‘2021년’에는 전체 언어 중 ‘Python’이 약 ‘51%’를 차지 일본은 과거보다 현재 차지 비율이 약 ‘1%’ 감소 중국은 과거보다 현재 차지 비율이 약 ‘11%’나 증가 Q9 Which of the following integrated development environments (IDE’s) do you use on a regular basis? (Select all that apply) 일본과 중국이 서로 다른 성향을 보임 일본은 ‘2019년’ ‘주피터’와 ‘비주얼(VS)’를 주로 사용 중국은 ‘2019년’ ‘주피터’,‘파이참’,‘비주얼(VS)’을 주로 사용 일본은 과거와 비교해 사용 비율이 미미하지만 각 각 ‘6%’,‘4%’ 증가 중국은 과거와 비교해 사용 비율이 각 각 파이참이 ‘3%’(증가), 주피터 ‘2%’(증가), 비주얼 ‘11%’(증가) Q14 What data visualization libraries or tools do you use on a regular basis? (Select all that apply) Matplotlib와 Seaborn의 숫자가 급격하게 늘어남 2019년에 높은 사용률을 보였던 plotly/plotly Express 와 Ggplot/ggplot2 2021년도엔 두 나라 모두 낮은 점유율을 보이고 있음 과거의 다른 항목들은 현재 미미하거나 낮아짐 결론 지표로 보는 2019년과 2021년의 차이 동아시아에서 캐글러들의 크게 나타나는 특징 향후 동아시아 미래의 캐글러들의 비전과 트렌드 예측","link":"/2021/11/18/kaggle/"}],"tags":[{"name":"machineLearning","slug":"machineLearning","link":"/tags/machineLearning/"},{"name":"image","slug":"image","link":"/tags/image/"},{"name":"phython","slug":"phython","link":"/tags/phython/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"sql","slug":"sql","link":"/tags/sql/"},{"name":"upload","slug":"upload","link":"/tags/upload/"}],"categories":[]}